---
--- Generated by Luanalysis
--- Created by cb106.
--- DateTime: 9/17/2020 18:12
---emu: options for the emulator
local emu = {} -- the main table

---poweron: Executes a power cycle.
function emu.poweron()
end

---softreset: Executes a (soft) reset.
function emu.softreset()
end

---speedmode: Set the emulator to given speed. The mode argument can be one of these:
----
----       - "normal"
----
----       - "nothrottle" (same as turbo on fceux)
----
----       - "turbo"
----
----       - "maximum"
---@param mode string
function emu.speedmode(mode)
end

---frameadvance: Advance the emulator by one frame. It's like pressing the frame advance button once.
---
---Most scripts use this function in their main game loop to advance frames. Note that you can also register functions by various methods that run "dead", returning control to the emulator and letting the emulator advance the frame.  For most people, using frame advance in an endless while loop is easier to comprehend so I suggest  starting with that.  This makes more sense when creating bots. Once you move to creating auxillary libraries, try the register() methods.
function emu.frameadvance()
end

---pause: Pauses the emulator.
emu.pause()

---exec_count: Calls given function, restricting its working time to given number of lua cycles. Using this method you can ensure that some heavy operation (like Lua bot) won't freeze FCEUX.
---@param count number (int)
---@param func function
function emu.exec_count(count, func)
end

---exec_time: **Windows-only.** Calls given function, restricting its working time to given number of milliseconds (approximate). Using this method you can ensure that some heavy operation (like Lua bot) won't freeze FCEUX.
---@param time number
---@param func function
function emu.exec_time(time, func)
end

---setrenderplanes: Toggles the drawing of the sprites and background planes. Set to false or nil to disable a pane, anything else will draw them.
---@param sprites boolean
---@param background boolean
function emu.setrenderplanes(sprites, background)
end

---message: Displays given message on screen in the standard messages position. Use [gui.text()][gui.lua] when you need to position text.
---@param message string
function emu.message(message) end

---framecount
---@return number (int)
function emu.framecount() return  end
return emu

